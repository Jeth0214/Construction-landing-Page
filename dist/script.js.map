{"version":3,"sources":["script.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","header","document","querySelector","navToggle","getElementById","navbar","navLinks","navLink","querySelectorAll","overlay","sections","toggleMenu","classList","toggle","navHighlighter","scrollY","window","pageYOffset","sectionId","forEach","section","sectionTop","offsetTop","getAttribute","link","href","includes","add","remove","addEventListener","innerWidth","documentElement","style","setProperty","offsetHeight","siblingLinks","filter","child","element"],"mappings":"AAAA,aAEA,SAASA,mBAAmBC,GAAO,OAAOC,mBAAmBD,IAAQE,iBAAiBF,IAAQG,4BAA4BH,IAAQI,oBAAsB,CACxJ,SAASA,qBAAuB,MAAM,IAAIC,UAAU,uIAAyI,CAC7L,SAASF,4BAA4BG,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOE,kBAAkBF,EAAGC,GAAS,IAAIE,EAAIC,OAAOC,UAAUC,SAASC,KAAKP,GAAGQ,MAAM,GAAI,GAAiE,MAAnD,WAANL,GAAkBH,EAAES,cAAaN,EAAIH,EAAES,YAAYC,MAAgB,QAANP,GAAqB,QAANA,EAAoBQ,MAAMC,KAAKZ,GAAc,cAANG,GAAqB,2CAA2CU,KAAKV,GAAWD,kBAAkBF,EAAGC,QAAzG,CAA7O,CAA+V,CAC/Z,SAASL,iBAAiBkB,GAAQ,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMC,KAAKE,EAAO,CAC7J,SAASnB,mBAAmBD,GAAO,GAAIiB,MAAMM,QAAQvB,GAAM,OAAOQ,kBAAkBR,EAAM,CAC1F,SAASQ,kBAAkBR,EAAKwB,IAAkB,MAAPA,GAAeA,EAAMxB,EAAIyB,UAAQD,EAAMxB,EAAIyB,QAAQ,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIV,MAAMO,GAAME,EAAIF,EAAKE,IAAKC,EAAKD,GAAK1B,EAAI0B,GAAI,OAAOC,CAAM,CAPlL,IAAMC,OAASC,SAASC,cAAc,WAChCC,UAAYF,SAASG,eAAe,eACpCC,OAASJ,SAASC,cAAc,QAChCI,SAAWL,SAASC,cAAc,eAClCK,QAAUN,SAASO,iBAAiB,cACpCC,QAAUR,SAASC,cAAc,YACjCQ,SAAWT,SAASO,iBAAiB,WA6C3C,SAASG,aACLF,QAAQG,UAAUC,OAAO,WACzBR,OAAOO,UAAUC,OAAO,iBAC5B,CAOA,SAASC,iBAEL,IAAIC,EAAUC,OAAOC,YACjBC,EAAY,GAGhBR,SAASS,SAAQ,SAAAC,GACb,IAAIC,EAAaD,EAAQE,UAAY,GACjCP,GAAWM,IACXH,EAAYE,EAAQG,aAAa,MAEzC,IAMAhB,QAAQY,SAAQ,SAAAK,GACGA,EAAKC,KACPC,SAASR,GAClBM,EAAKZ,UAAUe,IAAI,qBAGnBH,EAAKZ,UAAUgB,OAAO,oBAE9B,GACJ,CA7EAZ,OAAOa,iBAAiB,UAAU,WAC1Bb,OAAOc,WAAa,MACpBzB,OAAOO,UAAUgB,OAAO,kBACxBnB,QAAQG,UAAUgB,OAAO,WAEjC,IAGA3B,SAAS8B,gBAAgBC,MAAMC,YAAY,mBAAqBjC,OAAOkC,aAAe,EAAK,MAG3FlB,OAAOa,iBAAiB,SAAUf,gBAGlCX,UAAU0B,iBAAiB,SAAS,WAChClB,YACJ,IAMAJ,QAAQY,SAAQ,SAAAK,GACZA,EAAKK,iBAAiB,SAAS,WACvBb,OAAOc,WAAa,KACpBzB,OAAOO,UAAUgB,OAAO,kBACxBnB,QAAQG,UAAUgB,OAAO,YAEzBjB,aAIJa,EAAKZ,UAAUe,IAAI,qBACnBQ,aAAehE,mBAAIoC,SAAS6B,QAAO,SAAAC,GAAK,OAAIA,GAASb,CAAI,IACzDW,aAAahB,SAAQ,SAAAmB,GAAaA,EAAQ1B,UAAUgB,OAAO,oBAAqB,GAEpF,GAEJ","file":"script.js","sourcesContent":["const header = document.querySelector(\"#header\");\r\nconst navToggle = document.getElementById(\"nav__toggle\");\r\nconst navbar = document.querySelector(\".nav\");\r\nconst navLinks = document.querySelector(\".nav__links\");\r\nconst navLink = document.querySelectorAll(\".nav__link\");\r\nconst overlay = document.querySelector(\"#overlay\");\r\nconst sections = document.querySelectorAll(\"section\");\r\n// const sections = document.querySelectorAll(\"section[id]\");\r\n\r\n/** auto hide toggle menu and overlay when the user resize the window */\r\nwindow.addEventListener(\"resize\", () => {\r\n    if (window.innerWidth > 500) {\r\n        navbar.classList.remove(\"nav--open-menu\");\r\n        overlay.classList.remove(\"overlay\");\r\n    }\r\n})\r\n\r\n//set scroll padding top dynamically when smooth scrolling\r\ndocument.documentElement.style.setProperty(\"--scroll-padding\", (header.offsetHeight - 1) + \"px\");\r\n\r\n// add an event listener for scroll\r\nwindow.addEventListener(\"scroll\", navHighlighter)\r\n\r\n// hide and show toggle menu using the hamburger menu\r\nnavToggle.addEventListener(\"click\", () => {\r\n    toggleMenu();\r\n})\r\n\r\n/**  \r\n * hide and show toggle menu using the links\r\n * set the active styling upon clicking the link\r\n*/\r\nnavLink.forEach(link => {\r\n    link.addEventListener(\"click\", () => {\r\n        if (window.innerWidth > 768) {\r\n            navbar.classList.remove(\"nav--open-menu\");\r\n            overlay.classList.remove(\"overlay\");\r\n        } else {\r\n            toggleMenu();\r\n        };\r\n\r\n\r\n        link.classList.add(\"nav__link--active\");\r\n        siblingLinks = [...navLink].filter(child => child != link)\r\n        siblingLinks.forEach(element => { element.classList.remove(\"nav__link--active\") });\r\n\r\n    });\r\n\r\n});\r\n\r\n// hide and show toggle menu function \r\nfunction toggleMenu() {\r\n    overlay.classList.toggle(\"overlay\");\r\n    navbar.classList.toggle(\"nav--open-menu\");\r\n}\r\n\r\n/*\r\n    this function will set the nav link to active when scrolling \r\n    to its section\r\n*/\r\n\r\nfunction navHighlighter() {\r\n    // get the current scroll position\r\n    let scrollY = window.pageYOffset;\r\n    let sectionId = \"\";\r\n\r\n    // Now, loop through sections to get  top and ID values for each section\r\n    sections.forEach(section => {\r\n        let sectionTop = section.offsetTop - 60;\r\n        if (scrollY >= sectionTop) {\r\n            sectionId = section.getAttribute(\"id\");\r\n        }\r\n    })\r\n\r\n    /**\r\n     * check if nav link contains the section id\r\n     * and set the active class to it\r\n    */\r\n    navLink.forEach(link => {\r\n        let linkHref = link.href;\r\n        if (linkHref.includes(sectionId)) {\r\n            link.classList.add(\"nav__link--active\");\r\n        }\r\n        else {\r\n            link.classList.remove(\"nav__link--active\");\r\n        }\r\n    })\r\n}\r\n\r\n"]}